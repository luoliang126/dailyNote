/**
 * Created by ly on 2017/4/17.
 */
app.controller("openWindowController", function ($scope) {
    //打开弹窗
    $scope.showWindow = function(title,content){
        document.getElementById("mongban").style.display = "block";
        document.getElementsByClassName("mongban-main")[0].style.display = "block";
        document.getElementsByClassName("mongban-title")[0].innerHTML = title;
        document.getElementById("ifm").src = content;
        $scope.resizePosition();
    }
    // 关闭弹窗
    $scope.closeWin = function(){
        document.getElementById("mongban").style.display = "none";
        document.getElementsByClassName("mongban-main")[0].style.display = "none";
        document.getElementById("ifm").src = "";
    }
    // 弹窗的位置调整
    $scope.resizePosition = function (){
        var screenWidth = document.getElementById("mongban").offsetWidth;
        var screenHeight = document.getElementById("mongban").offsetHeight;
        var leftWidth = (screenWidth - document.getElementById("mongban-main").offsetWidth)/2;
        var topHeight = (screenHeight - document.getElementById("mongban-main").offsetHeight)/2;
        document.getElementById("mongban-main").style.left = leftWidth + "px";
        document.getElementById("mongban-main").style.top = topHeight + "px";
    }

    window.onresize = function(){
        $scope.resizePosition();
    }

    //基础弹窗
    $scope.normalLayer = function () {
        //layer.alert('内容');

        //带执行函数的弹窗
        //layer.alert("内容",function(){
        //    console.log("执行点击操作函数")
        //})

        //附带弹窗皮肤
        layer.alert('内容', {
            icon: 1,
            skin: 'layer-ext-moon'
        })
    }

    //提示性弹窗
    $scope.msgLayer = function () {
        //基础提示窗
        //layer.msg('玩命提示中');

        //自定义提示框消失时间
        layer.msg('玩命提示中',{
            time:2000
        });
    }
    //tips弹窗
    $scope.tipsLayer = function () {
        //tips层(提示框，类似于标签中的title属性)
        //layer.tips('Hi，我是tips',".tips-layer"); //第一个是需要展示的内容，第二个是元素选择器，如"#id"，就是需要在哪个标签显示内容

        layer.tips('我是另外一个tips，只不过我长得跟之前那位稍有些不一样。', '.tips-layer', {
            tips: [1, '#3595CC'],
            time: 2000	//定时多少秒后自动关闭
        });
    }

    //询问框
    $scope.confirmLayer = function(){
        layer.confirm('您是如何看待前端开发？', {
            btn: ['重要','奇葩'] //按钮
        }, function(){
            layer.msg('的确很重要', {icon: 1}); //嵌套弹框
        }, function(){
            layer.msg('也可以这样', {
                time: 20000, //20s后自动关闭
                btn: ['明白了', '知道了']
            });
        });
    }

    //多按钮选择弹窗
    $scope.choiceLayer = function(){
        layer.open({
            content: 'test',
            btn: ['按钮一', '按钮二', '按钮三'],
            yes: function(index, layero){
                //按钮【按钮一】的回调
                alert(1);
            },btn2: function(index, layero){
                //按钮【按钮二】的回调
                alert(2);
            },btn3: function(index, layero){
                //按钮【按钮三】的回调
                alert(3);
            },
            cancel: function(){
                //右上角关闭回调
                alert("close")
            }
        });
    }

    //带动画的弹窗
    $scope.animateLayer = function () {
        layer.alert('墨绿风格，点击确认看深蓝', {
            skin: 'layui-layer-molv', //样式类名
            closeBtn: 0 	//不显示关闭按钮
        }, function(){
            layer.alert('偶吧深蓝style', {
                skin: 'layui-layer-lan',
                closeBtn: 0,
                anim: 6 //动画类型(1-6种效果自测试)
            });
        });
    }

    //捕获弹窗（捕获标签里的内容,将标签的内容交给弹窗，展示在弹窗内，但该方法是剪切的方式，不是复制，所以在执行捕获后原文档中的内容会消失，捕获完成后再复原或其他操作）
    $scope.catchLayer = function () {
        //捕获页(捕获标签class=“catch-layer”的内容)
        layer.open({
            type: 1,
            shade: false,
            title: false, //不显示标题
            content: $('.catch-layer'), //捕获的元素
            cancel: function(){	//点击关闭按钮时，执行的函数
                layer.msg('捕获就是从页面已经存在的元素上，包裹layer的结构', {
                    time: 2000,
                    icon:1
                });
            }
        });
    }

    //页面弹窗(全屏页面弹窗)
    $scope.pageLayer = function(){
        //页面层
        layer.open({
            type: 1,
            skin: 'layui-layer-rim', //加上边框,默认为无
            area: ['420px', '240px'], //宽 高
            content: 'html内容',
            maxmin:true	//最大/小化按钮时候出现
        });

        //自定义页面
        //layer.open({
        //    type: 1,
        //    skin: 'layui-layer-demo', //样式类名
        //    closeBtn: 0, //不显示关闭按钮
        //    anim: 1,
        //    shadeClose: true, //开启遮罩关闭
        //    content: '内容'
        //});
    }

    //iframe加载层
    $scope.iframeLayer = function () {
        layer.open({
            type: 2,
            title: 'layer mobile页',	//弹出窗的标题
            shadeClose: false,
            shade: 0.3,
            maxmin:true,
            area: ['960px','500px'],	//iframe的宽高
            content: 'http://www.baidu.com' //iframe的url
        });

        //需要初始化就全屏
        //var luoliang = layer.open({
        //    type: 2,
        //    title: 'layer mobile页',	//弹出窗的标题
        //    shadeClose: false,
        //    shade: 0.3,
        //    maxmin:true,
        //    area: ['960px','500px'],	//iframe的宽高
        //    content: 'http://www.baidu.com' //iframe的url
        //});
        //layer.full(luoliang); //最大化(全屏)
        //layer.min(luoliang); //最小化
        //layer.restore(luoliang) //不知道
    }

    //加载层
    $scope.loadingLayer = function(){
        var index = layer.load(0, {shade: false}); //0代表加载的风格，支持0-2

        //var index = layer.load(1, {
        //    shade: [0.1,'#fff'] //0.1透明度的白色背景
        //});

        setTimeout(function () {
            layer.close(index);
        },3000)
        //注：关闭loading的方法,当页面内容加载完成后，在回调函数里执行：layer.close(index);
    }

    //prompt层(口令)
    $scope.promptLayer = function () {
        layer.prompt({
            title: '输入任何口令，并确认',
            formType: 1 //prompt风格，支持0-2
        }, function(pass){
            layer.prompt({title: '随便写点啥，并确认', formType: 2}, function(text){
                layer.msg('演示完毕！您的口令：'+ pass +' 您最后写下了：'+ text);
            });
        });
    }

    //tab层
    $scope.tabLayer = function(){
        layer.tab({
            area: ['600px', '300px'],
            maxmin:true,
            tab: [{
                title: 'TAB1',
                content: '内容1'
            }, {
                title: 'TAB2',
                content: '内容2'
            }, {
                title: 'TAB3',
                content: '内容3'
            }]
        });
    }
})