/**
 * Created by ly on 2017/4/12.
 */
app.controller("objectController", function ($scope) {
    var person = {};
    Object.defineProperty(person, 'name', {
        configurable: false,
        Enumberable:true,
        writable: false,
        value: 'Luoliang'
    });
    console.log(person.name);//Luoliang
    delete person.name; //不能删除掉
    console.log(person.name);//Luoliang
    person.name = 'bobo'; //也不能修改掉
    console.log(person.name);//Luoliang

    function Person(name, age, job) {
        this.name = name;
        this.age = age;
        this.job = job;
        this.lessons = ['Math', 'Physics'];
    }
    Person.prototype = {
        constructor: Person,//原型字面量方式会将对象的constructor变为Object，此外强制指回Person
        getName: function () {
            return this.name;
        }
    }
    //Person.prototype.getName = function () {
    //    return this.name;
    //}
    var person1 = new Person('Jack', 19, 'SoftWare Engneer');
    person1.lessons.push('Biology');
    var person2 = new Person('Lily', 39, 'Mechanical Engneer');
    console.log(typeof person1);
    console.log(Person.prototype.isPrototypeOf(person1));
    console.log(person1.hasOwnProperty("getName")); // true
    console.log(person1 instanceof Person);
    console.log("getName2" in person1); // true
    console.log(person1.lessons);//Math,Physics,Biology
    console.log(person2.lessons);//Math,Physics
    console.log(person1.getName === person2.getName);//true,//共享原型中定义方法
})